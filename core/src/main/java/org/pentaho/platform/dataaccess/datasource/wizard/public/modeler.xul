<window xmlns="http://www.pentaho.org/there.is.only.xul"
        xmlns:pen="http://www.pentaho.org/2008/xul">
  <dialog id="modeler_dialog" width="950" height="500"
          title="${modeler.title}"
          onload="modelerDialogController.onLoad()"
          resizable="false"
          padding="0"
          spacing="0"
          buttons="accept,cancel"
          pen:responsive="true"
          pen:sizingmode="fillviewportwidth"
          pen:minimumHeightCategory="content"
          pen:widthcategory="large"
          ondialogaccept="modelerDialogController.onAccept()"
          ondialogcancel='modelerDialogController.onCancel()'
          buttonlabelaccept="${dialog.OK}"
          buttonlabelcancel="${dialog.cancel}">
    <hbox id="metadatastep" flex="1" padding="0" spacing="3" height="425" pen:classname="flex-wrap">
      <editpanel spacing="0" width="260" flex="1">
        <caption label="${available}"/>

        <toolbar mode="icons" flex="0">
          <toolbarspacer flex="1" pen:classname="flex-auto"/>

          <toolbarbutton tooltiptext="${edit_source}" id="edit-icon" image="images/spacer.gif"
                         onclick="modelerDialogController.onEditSource()"
                         pen:classname="penatho-smalleditbutton"/>

          <toolbarseparator/>

          <toolbarbutton id="autoPopulateButton" image="images/spacer.gif"
                         onclick="modeler.showAutopopulatePrompt()" tooltiptext="${autopopulate_model}"
                         pen:classname="pentaho-autopopulatebutton"/>
          <toolbarbutton id="addField" image="images/spacer.gif" onclick="modeler.addField()" tooltiptext="${add}"
                         pen:classname="pentaho-addfieldbutton"/>
        </toolbar>

        <tree id="fieldList" height="410" width="258" flex="1" editable="false" hiddenrootnode="true"
              preserveselection="true" pen:ondrag="modeler.onModelTreeDrag()" pen:drageffect="copy"
              pen:dropiconsvisible="false" pen:classname="with-scroll-child">
          <treecols>
            <treecol flex="1" label="" primary="true"
                     pen:binding="name" pen:childrenbinding="children"
                     pen:imagebinding="image" editable="false"
                     pen:classnamebinding="classname" pen:expandedbinding="expanded"
                     pen:alttextbinding="altText"/>
          </treecols>
          <treechildren>
            <treeitem container="true" open="true">
              <treerow>
                <treecell label=""/>
              </treerow>
              <treechildren></treechildren>
            </treeitem>
          </treechildren>
        </tree>
      </editpanel>

      <deck id="modelDeck" flex="1" height="465">
        <tabbox id="modelTabbox" flex="1" width="410">
          <tabs>
            <tab id="analysisTab" label="${analysisTabLabel}"
                 onclick="modeler.setModelerPerspective('ANALYSIS')"></tab>
            <tab id="reportingTab" label="${reportingTabLabel}"
                 onclick="modeler.setModelerPerspective('REPORTING')"></tab>
          </tabs>

          <tabpanels>
            <tabpanel id="analysisTabPanel" height="409">
              <vbox id="analyzerModelPanel" height="411" flex="1" spacing="0" padding="0">
                <toolbar id="schema-toolbar" mode="icons" flex="0">
                  <toolbarbutton id="expand-all" image="images/spacer.gif" onclick="modeler.expandAll()"
                                 disabled="false" tooltiptext="${expand_all}"
                                 pen:classname="pentaho-expandallbutton"/>
                  <toolbarbutton id="collapse-all" image="images/spacer.gif" onclick="modeler.collapseAll()"
                                 disabled="false" tooltiptext="${collapse_all}"
                                 pen:classname="pentaho-collapseallbutton"/>
                  <toolbarspacer flex="1" pen:classname="flex-auto"/>
                  <toolbarbutton id="measureBtn" image="images/spacer.gif" onclick="modeler.showNewMeasureDialog()"
                                 disabled="true" tooltiptext="${add_measure}"
                                 pen:classname="pentaho-smallmeasurebutton"/>
                  <toolbarbutton id="dimensionBtn" image="images/spacer.gif" onclick="modeler.showNewDimensionDialog()"
                                 disabled="true" tooltiptext="${add_dimension}"
                                 pen:classname="pentaho-smalldimensionbutton"/>
                  <toolbarbutton id="hierarchyBtn" image="images/spacer.gif" onclick="modeler.showNewHierarchyDialog()"
                                 disabled="true" tooltiptext="${add_hiearchy}"
                                 pen:classname="pentaho-smallhierarchybutton"/>
                  <toolbarbutton id="levelBtn" image="images/spacer.gif" onclick="modeler.showNewLevelDialog()"
                                 disabled="true" tooltiptext="${add_level}"
                                 pen:classname="pentaho-smalllevelbutton"/>
                  <toolbarbutton id="memberPropBtn" image="images/spacer.gif"
                                 onclick="modeler.showNewMemberPropDialog()" disabled="true"
                                 tooltiptext="${add_member_prop}"
                                 pen:classname="pentaho-smallmemberpropbutton"/>
                  <toolbarbutton id="down-btn" image="images/spacer.gif" onclick="modeler.moveFieldDown()"
                                 tooltiptext="${move_field_down}"
                                 pen:classname="pentaho-downbutton"/>
                  <toolbarbutton id="up-btn" image="images/spacer.gif" onclick="modeler.moveFieldUp()"
                                 tooltiptext="${move_field_up}"
                                 pen:classname="pentaho-upbutton"/>
                  <toolbarbutton id="remove-btn" image="images/spacer.gif" onclick="modeler.removeField()"
                                 tooltiptext="${remove_field}"
                                 pen:classname="pentaho-smallremovebutton"/>
                  <toolbarbutton id="clearModel" image="images/spacer.gif" onclick="modeler.clearFields()"
                                 tooltiptext="${clearFields}"
                                 pen:classname="pentaho-clearmodelbutton"/>
                </toolbar>
                <tree id="dimensionTree" width="405" height="403" editable="false"
                      pen:ondrag="modeler.onModelTreeDrag()" pen:drageffect="move"
                      pen:dropvetoer="modeler.checkDropLocation()"
                      pen:ondrop="modeler.onModelTreeDrop()" hiddenrootnode="false" preserveselection="true"
                      pen:dropiconsvisible="false"
                      pen:classname="with-scroll-child">
                  <treecols>
                    <treecol width="405" label="" primary="true"
                             pen:binding="displayName" pen:childrenbinding="children"
                             pen:imagebinding="image" editable="false"
                             pen:disabledbinding="editingDisabled"
                             pen:tooltipbinding="validationMessagesString"
                             pen:alttextbinding="altText"
                             pen:expandedbinding="expanded" pen:classnamebinding="classname"/>
                  </treecols>
                  <treechildren>
                    <treeitem container="true" open="true">
                      <treerow>
                        <treecell label=""/>
                      </treerow>
                      <treechildren></treechildren>
                    </treeitem>
                  </treechildren>
                </tree>
              </vbox>
            </tabpanel>
            <tabpanel id="reportingTabPanel" height="409" spacing="0">
              <vbox id="reportingModelPanel" height="409" flex="1" spacing="0" padding="0">
                <toolbar id="categories-toolbar" mode="icons" flex="0">
                  <toolbarbutton id="reporting-expand-all-btn" image="images/spacer.gif"
                                 onclick="modeler.expandRelationalAll()" disabled="false" tooltiptext="${expand_all}"
                                 pen:classname="pentaho-expandallbutton"/>
                  <toolbarbutton id="reporting-collapse-all-btn" image="images/spacer.gif"
                                 onclick="modeler.collapseRelationalAll()" disabled="false"
                                 tooltiptext="${collapse_all}"
                                 pen:classname="pentaho-collapseallbutton"/>
                  <toolbarspacer flex="1" pen:classname="flex-auto"/>
                  <toolbarbutton id="categoryBtn" image="images/spacer.gif" onclick="modeler.showNewCategoryDialog()"
                                 tooltiptext="${new_category}"
                                 pen:classname="pentaho-smallcategorybutton"/>
                  <toolbarbutton id="fieldBtn" image="images/spacer.gif" onclick="modeler.showNewFieldDialog()"
                                 disabled="true" tooltiptext="${new_field}"
                                 pen:classname="pentaho-fieldbutton"/>
                  <toolbarbutton id="reporting-down-btn" image="images/spacer.gif"
                                 onclick="modeler.moveRelationalFieldDown()" tooltiptext="${move_field_down}"
                                 pen:classname="pentaho-downbutton"/>
                  <toolbarbutton id="reporting-up-btn" image="images/spacer.gif"
                                 onclick="modeler.moveRelationalFieldUp()" tooltiptext="${move_field_up}"
                                 pen:classname="pentaho-upbutton"/>
                  <toolbarbutton id="reporting-remove-btn" image="images/spacer.gif"
                                 onclick="modeler.removeRelationalNode()" tooltiptext="${remove_field}"
                                 pen:classname="pentaho-smallremovebutton"/>
                  <toolbarbutton id="clearRelationalModel" image="images/spacer.gif"
                                 onclick="modeler.clearRelationalFields()" tooltiptext="${clearFields}"
                                 pen:classname="pentaho-clearmodelbutton"/>
                </toolbar>
                <tree id="categoriesTree" width="405" height="403" editable="false" hiddenrootnode="false"
                      preserveselection="true"
                      pen:ondrag="modeler.onModelTreeDrag()" pen:drageffect="move"
                      pen:dropvetoer="modeler.checkDropLocation()"
                      pen:ondrop="modeler.onModelTreeDrop()" pen:dropiconsvisible="false"
                      pen:classname="with-scroll-child">
                  <treecols>
                    <treecol width="405" label="" primary="true"
                             pen:binding="displayName" pen:childrenbinding="children"
                             pen:imagebinding="image" editable="false"
                             pen:disabledbinding="editingDisabled"
                             pen:tooltipbinding="validationMessagesString"
                             pen:alttextbinding="altText"
                             pen:expandedbinding="expanded" pen:classnamebinding="classname"/>
                  </treecols>
                  <treechildren>
                    <treeitem container="true" open="true">
                      <treerow>
                        <treecell label=""/>
                      </treerow>
                      <treechildren></treechildren>
                    </treeitem>
                  </treechildren>
                </tree>
              </vbox>
            </tabpanel>
          </tabpanels>
        </tabbox>

        <editpanel width="410" id="schema-toolbar-groupbox">
          <caption label="${model}"/>
          <hbox id="modelPanel" height="413" flex="1" spacing="0" padding="0"></hbox>
        </editpanel>
      </deck>

      <editpanel id="propertiesPanel" flex="1" type="closable" width="272">
        <caption label="${properties}"/>

        <deck id="propertiesdeck" flex="0">
          <vbox/>
          <vbox id="measuresprops" spacing="4" width="260">
            <vbox bgcolor="#FFFFCC" id="messages2">
              <grid spacing="3">
                <columns>
                  <column/>
                  <column flex="1"/>

                </columns>
                <rows>
                  <row flex="1">
                    <image id="warning-img-0" src="images/spacer.gif"
                           pen:classname="pentaho-warningbutton icon-zoomable" pen:imagealttext="${modeler.warning}"/>
                    <label id="messages2label" flex="1" multiline="true" value="${test_message}"/>
                  </row>

                </rows>
              </grid>
              <hbox flex="1">
                <spacer flex="1"/>
                <button id="fixMeasuresColumnsBtn" label="${missing_column}"
                        onclick="modeler.resolveMissingColumn()" visible="true"/>
                <spacer flex="1"/>
                <button id="measure_message_btn" label="${more}"
                        onclick="modeler.showValidationMessagesDialog()" visible="false"/>
              </hbox>
            </vbox>
            <groupbox>
              <caption label="${source_column}"/>
              <hbox flex="1">
                <label id="measure_column_name" value="" flex="1"/>
                <button id="edit-measure-btn" image="images/spacer.gif"
                        onclick="modeler.changeColumn()" pen:classname="penatho-smalleditbutton"
                        pen:imagealttext="${modeler.change_column}"/> 

              </hbox>
            </groupbox>

            <spacer height="5"/>

            <groupbox>
              <caption label="${details}"/>

              <label value="${display_name}:"/>
              <textbox id="displayname"/>

              <label value="${aggregation}:"/>
              <menulist id="defaultAggregation" width="255">
                <menupopup>
                  <menuitem label="NONE"/>
                  <menuitem label="#,###;(#,###)"/>
                  <menuitem label="#,###.00;(#,###.00)"/>
                  <menuitem label="$ #,###;($ #,###)"/>
                  <menuitem label="$ #,###.00;($ #,###.00)"/>
                  <menuitem label="#.#%;(#.#%)"/>
                </menupopup>
              </menulist>

              <label value="${format}:"/>
              <menulist id="formatstring" width="255">
                <menupopup>
                  <menuitem label="NONE"/>
                  <menuitem label="#,###;(#,###)"/>
                  <menuitem label="#,###.00;(#,###.00)"/>
                  <menuitem label="$ #,###;($ #,###)"/>
                  <menuitem label="$ #,###.00;($ #,###.00)"/>
                  <menuitem label="#.#%;(#.#%)"/>
                </menupopup>
              </menulist>
            </groupbox>
          </vbox>

          <vbox id="dimensionprops" width="260">
            <vbox bgcolor="#FFFFCC" id="dimension_message">
              <grid spacing="3">
                <columns>
                  <column/>
                  <column flex="1"/>

                </columns>
                <rows>
                  <row flex="1">
                    <image id="warning-img-1" src="images/spacer.gif"
                           pen:classname="pentaho-warningbutton icon-zoomable" pen:imagealttext="${modeler.warning}"/>
                    <label id="dimension_message_label" flex="1" multiline="true"
                           value="${test_message}"/>
                  </row>

                </rows>
              </grid>
              <hbox flex="1">
                <spacer flex="1"/>
                <button id="dimension_message_btn" label="${more}"
                        onclick="modeler.showValidationMessagesDialog()" visible="false"/>
              </hbox>
            </vbox>
            <groupbox>
              <caption label="${details}"/>
              <label value="${dimension_name}:"/>
              <textbox id="dimension_name"/>
              <hbox flex="1">
                <checkbox id="is_time_dimension"/>
                <label value="${is_time_dimension}"/>
                <spacer flex="1"/>
              </hbox>
            </groupbox>

          </vbox>

          <vbox id="mainprops">
            <vbox bgcolor="#FFFFCC" id="main_message">
              <grid spacing="3">
                <columns>
                  <column/>
                  <column flex="1"/>

                </columns>
                <rows>
                  <row>
                    <image id="warning-img-2" src="images/spacer.gif"
                           pen:classname="pentaho-warningbutton icon-zoomable" pen:imagealttext="${undefined_ds}"/>
                    <label id="mainnode_message_label" flex="1" multiline="true"
                           value="${undefined_ds}"/>
                  </row>
                  <row flex="1">
                    <label id="datasource_message_label" flex="1" multiline="true"
                           value="${undefined_ds}"/>
                    <spacer/>
                  </row>

                </rows>
              </grid>
              <hbox flex="1">
                <spacer flex="1"/>
                <button id="mainnode_message_btn" label="${more}"
                        onclick="modeler.showValidationMessagesDialog()" visible="false"/>
              </hbox>
            </vbox>
            <groupbox>
              <caption label="${details}"/>
              <label value="${model_name}:"/>
              <textbox id="main_name"/>
              <label value="${source}:"/>
              <label id="source_name" value="some source"/>
              <hbox>
                <button id="datasource_button" label="Select" onclick="modeler.editDataSource()"
                        tooltiptext="${select_edit_ds}"/>
                <spacer flex="1"/>
              </hbox>
            </groupbox>

          </vbox>


          <vbox id="hierarchyprops" width="260">
            <vbox bgcolor="#FFFFCC" id="hierarchy_message">
              <grid spacing="3">
                <columns>
                  <column/>
                  <column flex="1"/>

                </columns>
                <rows>
                  <row flex="1">
                    <image id="warning-img-3" src="images/spacer.gif"
                           pen:classname="pentaho-warningbutton icon-zoomable" pen:imagealttext="${modeler.warning}"/>
                    <label id="hierarchy_message_label" flex="1" multiline="true"
                           value="${test_message}"/>
                  </row>

                </rows>
              </grid>
              <hbox flex="1">
                <spacer flex="1"/>
                <button id="hierarchy_message_btn" label="${more}"
                        onclick="modeler.showValidationMessagesDialog()" visible="false"/>
              </hbox>
            </vbox>
            <groupbox>
              <caption label="${details}"/>
              <label value="${hierarchy_name}:"/>
              <textbox id="hierarchy_name"/>
            </groupbox>

          </vbox>

          <vbox id="genericProps" width="260">
            <vbox bgcolor="#FFFFCC" id="generic_message">
              <grid spacing="3">
                <columns>
                  <column/>
                  <column flex="1"/>

                </columns>
                <rows>
                  <row flex="1">
                    <image id="warning-img-4" src="images/spacer.gif"
                           pen:classname="pentaho-warningbutton icon-zoomable" pen:imagealttext="${modeler.warning}"/>
                    <label id="generic_message_label" flex="1" multiline="true"
                           value="${test_message}"/>
                  </row>

                </rows>
              </grid>
              <hbox flex="1">
                <spacer flex="1"/>
                <button id="generic_message_btn" label="${more}"
                        onclick="modeler.showValidationMessagesDialog()" visible="false"/>
              </hbox>
            </vbox>
          </vbox>

          <vbox id="levelprops" width="260">
            <vbox bgcolor="#FFFFCC" id="level_message">
              <grid spacing="3">
                <columns>
                  <column/>
                  <column flex="1"/>

                </columns>
                <rows>
                  <row flex="1">
                    <image id="warning-img-5" src="images/spacer.gif"
                           pen:classname="pentaho-warningbutton icon-zoomable" pen:imagealttext="${modeler.warning}"/>
                    <label id="level_message_label" flex="1" multiline="true"
                           value="${test_message}"/>
                  </row>

                </rows>
              </grid>
              <hbox flex="1">
                <spacer flex="1"/>
                <button id="fixLevelColumnsBtn" label="${missing_column}"
                        onclick="modeler.resolveMissingColumn()" visible="false"/>
                <spacer flex="1"/>
                <button id="level_message_btn" label="${more}"
                        onclick="modeler.showValidationMessagesDialog()" visible="false"/>
              </hbox>
            </vbox>


            <groupbox width="260">
              <caption label="${source_column}"/>
              <hbox flex="1">
                <label id="level_source_col" value="" flex="1"/>
                <button id="edit-level-btn" image="images/spacer.gif" onclick="modeler.changeColumn()"
                        pen:classname="penatho-smalleditbutton" pen:imagealttext="${modeler.change_column}"/>

              </hbox>
            </groupbox>

            <spacer height="5"/>

            <groupbox width="260">
              <caption label="${details}"/>
              <label value="${level_name}:"/>
              <textbox id="level_name"/>

              <hbox flex="1">
                <checkbox id="has_unique_members"/>
                <label value="${has_unique_members}" flex="1" pen:classname="has-unique-members-label"/>
                <spacer flex="1"/>
              </hbox>

              <label value="${ordinal_column}:" flex="1"/>
              <hbox flex="1">
                <vbox flex="1">
                  <label id="level_ordinal_col" value=""/>
                </vbox>
                <vbox flex="0">
                  <button id="edit-ordinal-btn" image="images/spacer.gif" onclick="modeler.changeOrdinalColumn()"
                          pen:classname="penatho-smalleditbutton"
                          pen:imagealttext="${modeler.change_ordinal_column}"/>
                </vbox>
                <vbox flex="0">
                  <button id="clear_ordinal_column" image="images/spacer.gif" onclick="modeler.clearOrdinalColumn()"
                          pen:classname="pentaho-smallremovebutton"
                          pen:imagealttext="${modeler.clear_ordinal_column}" />
                </vbox>
              </hbox>

              <vbox id="geo_level_elements">
                <label value="${geo_role}:"/>
                <menulist id="level_geo_role" pen:binding="displayName">
                  <menupopup/>
                </menulist>
              </vbox>

              <vbox id="time_level_elements">
                <label id="time_level_type_label" value="${time_level_type}:"/>
                <menulist id="time_level_type" pen:binding="name">
                  <menupopup/>
                </menulist>

                <hbox>
                  <label id="time_level_format_label" value="${time_format}:"/>
                  <button id="help-btn" image="images/spacer.gif" tooltiptext="${time_format_help_tooltip}"
                          onclick="modeler.showHelp('${time_format_help_url}')"
                          pen:classname="pentaho-helpbutton"/>
                </hbox>
                <menulist id="time_level_format" editable="true">
                  <menupopup>
                    <menuitem label=""/>
                    <menuitem label="yyyy"/>
                    <menuitem label="q"/>
                    <menuitem label="M"/>
                    <menuitem label="w"/>
                    <menuitem label="yyyy-MM-dd"/>
                  </menupopup>
                </menulist>
              </vbox>

            </groupbox>
          </vbox>

          <vbox id="memberprops">
            <vbox bgcolor="#FFFFCC" id="memberprops_message">
              <grid spacing="3">
                <columns>
                  <column/>
                  <column flex="1"/>

                </columns>
                <rows>
                  <row flex="1">
                    <image id="warning-img-6" src="images/spacer.gif"
                           pen:classname="pentaho-warningbutton icon-zoomable" pen:imagealttext="${modeler.warning}"/>
                    <label id="memberprops_message_label" flex="1" multiline="true"
                           value="${test_message}"/>
                  </row>

                </rows>
              </grid>
              <hbox flex="1">
                <spacer flex="1"/>
                <button id="fixMemberPropsColumnsBtn" label="${missing_column}"
                        onclick="modeler.resolveMissingColumn()" visible="true"/>
                <spacer flex="1"/>
                <button id="memberprops_message_btn" label="${more}"
                        onclick="modeler.showValidationMessagesDialog()" visible="false"/>
              </hbox>
            </vbox>

            <groupbox width="260">
              <caption label="${source_column}"/>
              <hbox flex="1">
                <label id="memberprops_source_col" value="" flex="1"/>
                <button id="edit-member-props-btn" image="images/spacer.gif" onclick="modeler.changeColumn()"
                        pen:classname="penatho-smalleditbutton" pen:imagealttext="${modeler.change_column}"/>

              </hbox>
            </groupbox>

            <spacer height="5"/>

            <groupbox width="260">
              <caption label="${details}"/>
              <label value="${memberprops_name}:"/>
              <textbox id="memberprops_name"/>

              <label value="${node_description}:"/>
              <textbox id="memberprops_desc" multiline="true" height="70"/>

            </groupbox>
          </vbox>


          <vbox id="relationalmodelprops">
            <vbox bgcolor="#FFFFCC" id="relational_message">
              <grid spacing="3">
                <columns>
                  <column/>
                  <column flex="1"/>

                </columns>
                <rows>
                  <row>
                    <image id="warning-img-7" src="images/spacer.gif"
                           pen:classname="pentaho-warningbutton icon-zoomable" pen:imagealttext="${undefined_ds}"/>
                    <label id="relational_message_label" flex="1" multiline="true"
                           value="${undefined_ds}"/>
                  </row>
                </rows>
              </grid>
              <hbox flex="1">
                <spacer flex="1"/>
                <button id="relational_message_btn" label="${more}"
                        onclick="modeler.showValidationMessagesDialog()" visible="false"/>
              </hbox>
            </vbox>
            <groupbox>
              <caption label="${details}"/>
              <label value="${model_name}:"/>
              <textbox id="relational_name"/>
            </groupbox>

          </vbox>

          <vbox id="categoryprops">
            <vbox bgcolor="#FFFFCC" id="category_message">
              <grid spacing="3">
                <columns>
                  <column/>
                  <column flex="1"/>

                </columns>
                <rows>
                  <row flex="1">
                    <image id="warning-img-8" src="images/spacer.gif"
                           pen:classname="pentaho-warningbutton icon-zoomable" pen:imagealttext="${modeler.warning}"/>
                    <label id="category_message_label" flex="1" multiline="true"
                           value="${test_message}"/>
                  </row>

                </rows>
              </grid>
              <hbox flex="1">
                <spacer flex="1"/>
                <button id="category_message_btn" label="${more}"
                        onclick="modeler.showValidationMessagesDialog()" visible="false"/>
              </hbox>
            </vbox>
            <groupbox>
              <caption label="${details}"/>
              <label value="${category_name}:"/>
              <textbox id="category_name"/>
            </groupbox>

          </vbox>

          <vbox id="fieldprops" flex="1" spacing="4">
            <vbox bgcolor="#FFFFCC" id="fieldmessages">
              <grid spacing="3">
                <columns>
                  <column/>
                  <column flex="1"/>

                </columns>
                <rows>
                  <row flex="1">
                    <image id="warning-img-9" src="images/spacer.gif"
                           pen:classname="pentaho-warningbutton icon-zoomable" pen:imagealttext="${modeler.warning}"/>
                    <label id="fieldmessageslabel" flex="1" multiline="true"
                           value="${test_message}"/>
                  </row>

                </rows>
              </grid>
              <hbox flex="1">
                <spacer flex="1"/>
                <button id="fixFieldColumnsBtn" label="${missing_column}"
                        onclick="modeler.resolveMissingColumn()" visible="true"/>
                <spacer flex="1"/>
                <button id="field_message_btn" label="${more}"
                        onclick="modeler.showValidationMessagesDialog()" visible="false"/>
              </hbox>
            </vbox>
            <groupbox>
              <caption label="${source_column}"/>
              <hbox flex="1">
                <label id="field_column_name" value="" flex="1"/>
                <button id="edit-change-btn" image="images/spacer.gif" onclick="modeler.changeColumn()"
                        pen:classname="penatho-smalleditbutton" pen:imagealttext="${modeler.change_column}"/>

              </hbox>
            </groupbox>

            <spacer height="5"/>

            <groupbox>
              <caption label="${details}"/>

              <label value="${display_name}:"/>
              <textbox id="fielddisplayname"/>

              <label value="${default_aggregation}:"/>
              <menulist id="field_defaultAggregation" width="255">
                <menupopup>
                  <menuitem label="NONE"/>
                  <menuitem label="SUM"/>
                  <menuitem label="AVERAGE"/>
                </menupopup>
              </menulist>

              <label value="${optional_aggregations}:"/>
              <listbox id="field_optionalAggregationTypes" seltype="multi" height="120" width="255">
                <listitem label="NONE"/>
                <listitem label="SUM"/>
                <listitem label="AVERAGE"/>
                <listitem label="MINIMUM"/>
                <listitem label="MAXIMUM"/>
                <listitem label="COUNT_DISTINCT"/>
              </listbox>

              <label value="${format}:"/>
              <menulist id="fieldformatstring" width="255">
                <menupopup>
                  <menuitem label="NONE"/>
                  <menuitem label="#,###;(#,###)"/>
                  <menuitem label="#,###.00;(#,###.00)"/>
                  <menuitem label="$ #,###;($ #,###)"/>
                  <menuitem label="$ #,###.00;($ #,###.00)"/>
                  <menuitem label="#.#%;(#.#%)"/>
                </menupopup>
              </menulist>
            </groupbox>
          </vbox>
        </deck>
      </editpanel>
    </hbox>
  </dialog>

  <dialog id="errorDialog" width="300" height="100"
          title="${errorDialog.errorOccurred}"
          pen:aria-role="alertdialog"
          pen:responsive="true"
          pen:minimumheightcategory="content"
          pen:widthcategory="text"
          buttons="accept"
          buttonalign="center"
          ondialogaccept="modelerDialogController.closeErrorDialog()"
          buttonlabelaccept="${errorDialog.OK}">
    <label id="errorLabel" value="${errorDialog.errorOccurred}"/>
  </dialog>

  <dialog id="resolveColumnsDialog" width="300" height="400"
          title="Resolve Missing Columns"
          onload="colResolver.init()"
          pen:responsive="true"
          pen:sizingmode="fillviewportwidth"
          pen:minimumHeightCategory="content"
          pen:widthcategory="extrasmall"
          buttons="accept, cancel"
          buttonalign="right"
          ondialogaccept="colResolver.done()"
          ondialogcancel="colResolver.cancel()"
          buttonlabelaccept="${dialog.OK}"
          buttonlabelcancel="${dialog.cancel}">
    <groupbox flex="1">
      <caption label="${chooseColumn}"/>
      <tree id="resolveColumnsTree" flex="1" editable="false" hiddenrootnode="true" preserveselection="false"
            height="400" width="295">
        <treecols>
          <treecol flex="1" label="" primary="true"
                   pen:binding="name" pen:childrenbinding="children"
                   pen:imagebinding="image" editable="false"
                   pen:alttextbinding="altText"
                   pen:expandedbinding="expanded" pen:classnamebinding="classname"/>
        </treecols>
        <treechildren>
          <treeitem container="true" open="true">
            <treerow>
              <treecell label=""/>
            </treerow>
            <treechildren></treechildren>
          </treeitem>
        </treechildren>
      </tree>
    </groupbox>
  </dialog>
</window>
